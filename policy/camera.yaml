#
# LSST Data Management System
# Copyright 2017 LSST Corporation.
#
# This product includes software developed by the
# LSST Project (http://www.lsst.org/).
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the LSST License Statement and
# the GNU General Public License along with this program.  If not,
# see <http://www.lsstcorp.org/LegalNotices/>.
#
#
--- # SuperBIT
#
# There are nine ccds with names "S00".."S22" and IDs 0..8
# Each has sixteen amplifiers with names like "00".."07" and "10".."17"

name : "superBIT"
plateScale : 41.818                     # plate scale in arcseconds on sky/mm # Based on pix scale of 0.23 arcsec/pix
radialCoeffs : None                     # radial distortion coefficients (c_0 + c_1 r + c_2 r^2 + ...)
                                        # JEM -- unsure about this radialCoeffs deal so I set it to None for now

#
# A single amplifier ("segment" to the camera team)
#
AMP_ITL : &AMP_ITL
    # trimmed
    readCorner : LL

    rawBBox                 : [[0,    0], [6644, 4452]]  # total size of one amp's raw data

  # name of section     : [[start,start], [width, height]] # start is zero-based, length=length of arr
  # Y'ALL JEM guesses "parallel" means to direction of readout, "serial" is perpendicular to readout direction?
    rawDataBBox             : [[33,  33], [6576,  4384]]  # data region in raw data
    rawSerialPrescanBBox    : [[21,  22], [12,     4432]]  # serial prescan (often == extended)
    rawSerialOverscanBBox   : [[1,  22],  [20,     4432]]  # serial overscan # I don't know how to deweight serial overscan
    rawParallelPrescanBBox  : [[13, 4432], [6632,    12]]  # pixels digitised before first parallel transfer
    rawParallelOverscanBBox : [[1, 4433], [6632,      20]]  # parallel overscan

    saturation : 20000                  # saturation level, JEM set this in electrons per pixel well depth

    # Linearity correction is still under discussion, so this is a placeholder.
    linearityType : PROPORTIONAL
    linearityThreshold : 0
    linearityMax : 20000                # == saturation of ADC
    linearityCoeffs : [0, 20000]        # == [linearityThreshold, linearityMax]

AMP : &AMP
  << : *AMP_ITL
  perAmpData : False                     # data is provided independentally for each amplifier (a la LSST)
                                         # 
#
# A single CCD ("sensor" to the camera team)
#
CCD : &CCD
    detectorType : 0
    refpos : [.nan, .nan]
    offset : [.nan, .nan]
    # This is the orientation we need to put the serial direction along the x-axis
    bbox : [[0, 0], [6644, 4452]]   # This is a bbox defined by corners rather than extent.
                                    # Needs to be made consistent with others. TODO: DM-13098
    pixelSize : [0.0055, 0.0055]          # in mm
    transformDict : {nativeSys : 'Pixels', transforms : None}
    transposeDetector : False
    pitch : 0.0                         # (degrees)
    yaw : 0.0                           # rotation in plane of camera (degrees)
    roll : 0.0                          # (degrees)

    amplifiers : {}
#
# Define our specific devices
#
# All the CCDs present in this file
#
CCDs :
   S00: &S00                            # Sensor (0, 0)
      << : *CCD
      id : 0                            # Not quite sure what this is for (original comment in AuxTel)
      serial : KAI-29050                # JEM -- I think it's because you can't get around raft/sensor/array 
      refpos : [3287.5, 2191.5]         # native to DMstack software. Also that's not our serial number
      offset : [ -63.748000000000005, -185.59199999999998]

      amplifiers:      # these take the form 00-07, 10-17, ie single digit row/col concatenated, not ints
           "00": &A10
             <<: *AMP      # unclear wth << is doing
             hdu : 1
             flipXY : [True, False]
             ixy : [0, 0]
             gain : 1.093
             readNoise : 6.66
